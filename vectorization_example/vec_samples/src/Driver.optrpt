Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.4.196 Build 20170411

Compiler options: -std=c99 -opt-report=4 -qopt-report-phase=vec -D NOALIAS -D ALIGNED -o MatVector

Begin optimization report for: main()

    Report from: Vector optimizations [vec]


LOOP BEGIN at Driver.c(62,2) inlined into Driver.c(147,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Driver.c(63,3) inlined into Driver.c(147,2)
      remark #15388: vectorization support: reference a[i][j] has aligned access   [ Driver.c(64,4) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.080
      remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ Driver.c(64,14) ]
      remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ Driver.c(64,4) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 114 
      remark #15477: vector cost: 44.000 
      remark #15478: estimated potential speedup: 2.490 
      remark #15482: vectorized math library calls: 1 
      remark #15487: type converts: 3 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at Driver.c(63,3) inlined into Driver.c(147,2)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at Driver.c(68,3) inlined into Driver.c(147,2)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <a[i][47]>, stride is 48   [ Driver.c(70,5) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 11
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 3 
   remark #15477: vector cost: 8.750 
   remark #15478: estimated potential speedup: 0.350 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at Driver.c(68,3) inlined into Driver.c(147,2)
<Remainder>
LOOP END

LOOP BEGIN at Driver.c(77,2) inlined into Driver.c(148,2)
   remark #15388: vectorization support: reference x[i] has aligned access   [ Driver.c(148,19) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.060
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ Driver.c(78,10) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ Driver.c(148,19) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 113 
   remark #15477: vector cost: 42.000 
   remark #15478: estimated potential speedup: 2.590 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 3 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at Driver.c(77,2) inlined into Driver.c(148,2)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at Driver.c(89,2) inlined into Driver.c(189,2)
   remark #15388: vectorization support: reference b[i] has aligned access   [ Driver.c(189,15) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 3.667
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ Driver.c(87,12) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.970 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at Driver.c(89,2) inlined into Driver.c(189,2)
<Remainder loop for vectorization>
LOOP END


Non-optimizable loops:


LOOP BEGIN at Driver.c(152,2)
   remark #15543: loop was not vectorized: loop with function call not considered an optimization candidate.
LOOP END
===========================================================================

Begin optimization report for: printsum(int, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at Driver.c(89,2)
   remark #15389: vectorization support: reference ans[i] has unaligned access   [ Driver.c(89,30) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.917
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ Driver.c(87,12) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 2.230 
   remark #15487: type converts: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at Driver.c(89,2)
<Remainder loop for vectorization>
LOOP END
===========================================================================

Begin optimization report for: init_array(int, float, float *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at Driver.c(77,2)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at Driver.c(77,2)
   remark #15388: vectorization support: reference a[i] has aligned access   [ Driver.c(78,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.093
   remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ Driver.c(78,10) ]
   remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ Driver.c(78,3) ]
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 114 
   remark #15477: vector cost: 40.250 
   remark #15478: estimated potential speedup: 2.760 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 3 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at Driver.c(77,2)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at Driver.c(80,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Driver.c(80,3)
      remark #15389: vectorization support: reference a[i] has unaligned access   [ Driver.c(81,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.250 
      remark #15478: estimated potential speedup: 2.900 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at Driver.c(80,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: init_matrix(int, int, float, float (*)[48])

    Report from: Vector optimizations [vec]


LOOP BEGIN at Driver.c(62,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Driver.c(63,3)
      remark #15389: vectorization support: reference a[i][j] has unaligned access   [ Driver.c(64,4) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.066
      remark #15417: vectorization support: number of FP up converts: single precision to double precision 1   [ Driver.c(64,14) ]
      remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ Driver.c(64,4) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 114 
      remark #15477: vector cost: 41.750 
      remark #15478: estimated potential speedup: 2.710 
      remark #15482: vectorized math library calls: 1 
      remark #15487: type converts: 3 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at Driver.c(63,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at Driver.c(68,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at Driver.c(69,4)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at Driver.c(69,4)
         remark #15389: vectorization support: reference a[i][j] has unaligned access   [ Driver.c(70,5) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.300
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 3 
         remark #15477: vector cost: 1.250 
         remark #15478: estimated potential speedup: 2.180 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at Driver.c(69,4)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================
